name: terraform
on:
  workflow_run:
    workflows: ["package-for-lambda"]
    types: 
      - completed


jobs:
  terraform:
    environment: prod
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
  
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Extract tag name
      id: extract_tag
      run: echo "::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}"
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      working-directory: terraform
      run: terraform init

    - name: Apply Terraform
      working-directory: terraform    
      env:
        TF_VAR_state_bucket: ${{ vars.STATE_BUCKET }}
        TF_VAR_state_key: ${{ vars.STATE_KEY }}
        TF_VAR_path_name: ${{ vars.PATH_NAME }}
        TF_VAR_bucket_name: ${{ vars.BUCKET_NAME }}
        TF_VAR_space_fetch_version: ${{ steps.extract_tag.outputs.TAG_NAME }}
        TF_VAR_lambda_iam_role: ${{ secrets.LAMBDA_IAM_ROLE }}        
      run: terraform plan -out plan


    - name: Apply Terraform
      working-directory: terraform    
      env:
        TF_VAR_state_bucket: ${{ vars.STATE_BUCKET }}
        TF_VAR_state_key: ${{ vars.STATE_KEY }}
        TF_VAR_path_name: ${{ vars.PATH_NAME }}
        TF_VAR_bucket_name: ${{ vars.BUCKET_NAME }}
        TF_VAR_space_fetch_version: ${{ steps.extract_tag.outputs.TAG_NAME }}
        TF_VAR_lambda_iam_role: ${{ secrets.LAMBDA_IAM_ROLE }}
      run: terraform apply -auto-approve plan
